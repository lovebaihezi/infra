// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: apps/apps-service/todo/todo.proto

#include "apps/apps-service/todo/todo.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace todo {
PROTOBUF_CONSTEXPR Todo::Todo(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , content_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , starttime_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , overduetime_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , iscompleted_(false)
  , index_(0){}
struct TodoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TodoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TodoDefaultTypeInternal() {}
  union {
    Todo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TodoDefaultTypeInternal _Todo_default_instance_;
PROTOBUF_CONSTEXPR TodoUpdate::TodoUpdate(
    ::_pbi::ConstantInitialized)
  : todos_(){}
struct TodoUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TodoUpdateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TodoUpdateDefaultTypeInternal() {}
  union {
    TodoUpdate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TodoUpdateDefaultTypeInternal _TodoUpdate_default_instance_;
PROTOBUF_CONSTEXPR UpdateResult::UpdateResult(
    ::_pbi::ConstantInitialized){}
struct UpdateResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateResultDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateResultDefaultTypeInternal() {}
  union {
    UpdateResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateResultDefaultTypeInternal _UpdateResult_default_instance_;
PROTOBUF_CONSTEXPR TodoQuery::TodoQuery(
    ::_pbi::ConstantInitialized){}
struct TodoQueryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TodoQueryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TodoQueryDefaultTypeInternal() {}
  union {
    TodoQuery _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TodoQueryDefaultTypeInternal _TodoQuery_default_instance_;
PROTOBUF_CONSTEXPR QueryResult::QueryResult(
    ::_pbi::ConstantInitialized)
  : todos_(){}
struct QueryResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryResultDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryResultDefaultTypeInternal() {}
  union {
    QueryResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryResultDefaultTypeInternal _QueryResult_default_instance_;
PROTOBUF_CONSTEXPR TodoAdd::TodoAdd(
    ::_pbi::ConstantInitialized)
  : todos_(){}
struct TodoAddDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TodoAddDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TodoAddDefaultTypeInternal() {}
  union {
    TodoAdd _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TodoAddDefaultTypeInternal _TodoAdd_default_instance_;
PROTOBUF_CONSTEXPR AddResult::AddResult(
    ::_pbi::ConstantInitialized){}
struct AddResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddResultDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddResultDefaultTypeInternal() {}
  union {
    AddResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddResultDefaultTypeInternal _AddResult_default_instance_;
PROTOBUF_CONSTEXPR DeleteQuery::DeleteQuery(
    ::_pbi::ConstantInitialized)
  : ids_(){}
struct DeleteQueryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteQueryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteQueryDefaultTypeInternal() {}
  union {
    DeleteQuery _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteQueryDefaultTypeInternal _DeleteQuery_default_instance_;
PROTOBUF_CONSTEXPR DeleteResult::DeleteResult(
    ::_pbi::ConstantInitialized){}
struct DeleteResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteResultDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteResultDefaultTypeInternal() {}
  union {
    DeleteResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteResultDefaultTypeInternal _DeleteResult_default_instance_;
}  // namespace todo
static ::_pb::Metadata file_level_metadata_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto[9];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto = nullptr;

const uint32_t TableStruct_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::todo::Todo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::todo::Todo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::todo::Todo, id_),
  PROTOBUF_FIELD_OFFSET(::todo::Todo, content_),
  PROTOBUF_FIELD_OFFSET(::todo::Todo, starttime_),
  PROTOBUF_FIELD_OFFSET(::todo::Todo, overduetime_),
  PROTOBUF_FIELD_OFFSET(::todo::Todo, iscompleted_),
  PROTOBUF_FIELD_OFFSET(::todo::Todo, index_),
  ~0u,
  ~0u,
  ~0u,
  0,
  ~0u,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::todo::TodoUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::todo::TodoUpdate, todos_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::todo::UpdateResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::todo::TodoQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::todo::QueryResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::todo::QueryResult, todos_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::todo::TodoAdd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::todo::TodoAdd, todos_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::todo::AddResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::todo::DeleteQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::todo::DeleteQuery, ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::todo::DeleteResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 12, -1, sizeof(::todo::Todo)},
  { 18, -1, -1, sizeof(::todo::TodoUpdate)},
  { 25, -1, -1, sizeof(::todo::UpdateResult)},
  { 31, -1, -1, sizeof(::todo::TodoQuery)},
  { 37, -1, -1, sizeof(::todo::QueryResult)},
  { 44, -1, -1, sizeof(::todo::TodoAdd)},
  { 51, -1, -1, sizeof(::todo::AddResult)},
  { 57, -1, -1, sizeof(::todo::DeleteQuery)},
  { 64, -1, -1, sizeof(::todo::DeleteResult)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::todo::_Todo_default_instance_._instance,
  &::todo::_TodoUpdate_default_instance_._instance,
  &::todo::_UpdateResult_default_instance_._instance,
  &::todo::_TodoQuery_default_instance_._instance,
  &::todo::_QueryResult_default_instance_._instance,
  &::todo::_TodoAdd_default_instance_._instance,
  &::todo::_AddResult_default_instance_._instance,
  &::todo::_DeleteQuery_default_instance_._instance,
  &::todo::_DeleteResult_default_instance_._instance,
};

const char descriptor_table_protodef_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n!apps/apps-service/todo/todo.proto\022\004tod"
  "o\"\204\001\n\004Todo\022\n\n\002id\030\001 \001(\t\022\017\n\007content\030\002 \001(\t\022"
  "\021\n\tstartTime\030\003 \001(\t\022\030\n\013overdueTime\030\004 \001(\tH"
  "\000\210\001\001\022\023\n\013isCompleted\030\005 \001(\010\022\r\n\005index\030\006 \001(\005"
  "B\016\n\014_overdueTime\"\'\n\nTodoUpdate\022\031\n\005todos\030"
  "\001 \003(\0132\n.todo.Todo\"\016\n\014UpdateResult\"\013\n\tTod"
  "oQuery\"(\n\013QueryResult\022\031\n\005todos\030\001 \003(\0132\n.t"
  "odo.Todo\"$\n\007TodoAdd\022\031\n\005todos\030\001 \003(\0132\n.tod"
  "o.Todo\"\013\n\tAddResult\"\032\n\013DeleteQuery\022\013\n\003id"
  "s\030\001 \003(\t\"\016\n\014DeleteResult2\322\001\n\013TodoService\022"
  "/\n\tQueryTodo\022\017.todo.TodoQuery\032\021.todo.Que"
  "ryResult\0222\n\nUpdateTodo\022\020.todo.TodoUpdate"
  "\032\022.todo.UpdateResult\022)\n\007AddTodo\022\r.todo.T"
  "odoAdd\032\017.todo.AddResult\0223\n\nDeleteTodo\022\021."
  "todo.DeleteQuery\032\022.todo.DeleteResultb\006pr"
  "oto3"
  ;
static ::_pbi::once_flag descriptor_table_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto = {
    false, false, 604, descriptor_table_protodef_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto,
    "apps/apps-service/todo/todo.proto",
    &descriptor_table_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto_once, nullptr, 0, 9,
    schemas, file_default_instances, TableStruct_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto::offsets,
    file_level_metadata_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto, file_level_enum_descriptors_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto,
    file_level_service_descriptors_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto_getter() {
  return &descriptor_table_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto(&descriptor_table_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto);
namespace todo {

// ===================================================================

class Todo::_Internal {
 public:
  using HasBits = decltype(std::declval<Todo>()._has_bits_);
  static void set_has_overduetime(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

Todo::Todo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:todo.Todo)
}
Todo::Todo(const Todo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content().empty()) {
    content_.Set(from._internal_content(), 
      GetArenaForAllocation());
  }
  starttime_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    starttime_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_starttime().empty()) {
    starttime_.Set(from._internal_starttime(), 
      GetArenaForAllocation());
  }
  overduetime_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    overduetime_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_overduetime()) {
    overduetime_.Set(from._internal_overduetime(), 
      GetArenaForAllocation());
  }
  ::memcpy(&iscompleted_, &from.iscompleted_,
    static_cast<size_t>(reinterpret_cast<char*>(&index_) -
    reinterpret_cast<char*>(&iscompleted_)) + sizeof(index_));
  // @@protoc_insertion_point(copy_constructor:todo.Todo)
}

inline void Todo::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
content_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  content_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
starttime_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  starttime_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
overduetime_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  overduetime_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&iscompleted_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&index_) -
    reinterpret_cast<char*>(&iscompleted_)) + sizeof(index_));
}

Todo::~Todo() {
  // @@protoc_insertion_point(destructor:todo.Todo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Todo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  content_.Destroy();
  starttime_.Destroy();
  overduetime_.Destroy();
}

void Todo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Todo::Clear() {
// @@protoc_insertion_point(message_clear_start:todo.Todo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  content_.ClearToEmpty();
  starttime_.ClearToEmpty();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    overduetime_.ClearNonDefaultToEmpty();
  }
  ::memset(&iscompleted_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&iscompleted_)) + sizeof(index_));
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Todo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "todo.Todo.id"));
        } else
          goto handle_unusual;
        continue;
      // string content = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_content();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "todo.Todo.content"));
        } else
          goto handle_unusual;
        continue;
      // string startTime = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_starttime();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "todo.Todo.startTime"));
        } else
          goto handle_unusual;
        continue;
      // optional string overdueTime = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_overduetime();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "todo.Todo.overdueTime"));
        } else
          goto handle_unusual;
        continue;
      // bool isCompleted = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          iscompleted_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 index = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Todo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:todo.Todo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "todo.Todo.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string content = 2;
  if (!this->_internal_content().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content().data(), static_cast<int>(this->_internal_content().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "todo.Todo.content");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_content(), target);
  }

  // string startTime = 3;
  if (!this->_internal_starttime().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_starttime().data(), static_cast<int>(this->_internal_starttime().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "todo.Todo.startTime");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_starttime(), target);
  }

  // optional string overdueTime = 4;
  if (_internal_has_overduetime()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_overduetime().data(), static_cast<int>(this->_internal_overduetime().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "todo.Todo.overdueTime");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_overduetime(), target);
  }

  // bool isCompleted = 5;
  if (this->_internal_iscompleted() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_iscompleted(), target);
  }

  // int32 index = 6;
  if (this->_internal_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:todo.Todo)
  return target;
}

size_t Todo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:todo.Todo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string content = 2;
  if (!this->_internal_content().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content());
  }

  // string startTime = 3;
  if (!this->_internal_starttime().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_starttime());
  }

  // optional string overdueTime = 4;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_overduetime());
  }

  // bool isCompleted = 5;
  if (this->_internal_iscompleted() != 0) {
    total_size += 1 + 1;
  }

  // int32 index = 6;
  if (this->_internal_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Todo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Todo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Todo::GetClassData() const { return &_class_data_; }

void Todo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Todo *>(to)->MergeFrom(
      static_cast<const Todo &>(from));
}


void Todo::MergeFrom(const Todo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:todo.Todo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_content().empty()) {
    _internal_set_content(from._internal_content());
  }
  if (!from._internal_starttime().empty()) {
    _internal_set_starttime(from._internal_starttime());
  }
  if (from._internal_has_overduetime()) {
    _internal_set_overduetime(from._internal_overduetime());
  }
  if (from._internal_iscompleted() != 0) {
    _internal_set_iscompleted(from._internal_iscompleted());
  }
  if (from._internal_index() != 0) {
    _internal_set_index(from._internal_index());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Todo::CopyFrom(const Todo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:todo.Todo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Todo::IsInitialized() const {
  return true;
}

void Todo::InternalSwap(Todo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &content_, lhs_arena,
      &other->content_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &starttime_, lhs_arena,
      &other->starttime_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &overduetime_, lhs_arena,
      &other->overduetime_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Todo, index_)
      + sizeof(Todo::index_)
      - PROTOBUF_FIELD_OFFSET(Todo, iscompleted_)>(
          reinterpret_cast<char*>(&iscompleted_),
          reinterpret_cast<char*>(&other->iscompleted_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Todo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto_getter, &descriptor_table_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto_once,
      file_level_metadata_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto[0]);
}

// ===================================================================

class TodoUpdate::_Internal {
 public:
};

TodoUpdate::TodoUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  todos_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:todo.TodoUpdate)
}
TodoUpdate::TodoUpdate(const TodoUpdate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      todos_(from.todos_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:todo.TodoUpdate)
}

inline void TodoUpdate::SharedCtor() {
}

TodoUpdate::~TodoUpdate() {
  // @@protoc_insertion_point(destructor:todo.TodoUpdate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TodoUpdate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TodoUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TodoUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:todo.TodoUpdate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  todos_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TodoUpdate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .todo.Todo todos = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_todos(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TodoUpdate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:todo.TodoUpdate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .todo.Todo todos = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_todos_size()); i < n; i++) {
    const auto& repfield = this->_internal_todos(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:todo.TodoUpdate)
  return target;
}

size_t TodoUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:todo.TodoUpdate)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .todo.Todo todos = 1;
  total_size += 1UL * this->_internal_todos_size();
  for (const auto& msg : this->todos_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TodoUpdate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TodoUpdate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TodoUpdate::GetClassData() const { return &_class_data_; }

void TodoUpdate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TodoUpdate *>(to)->MergeFrom(
      static_cast<const TodoUpdate &>(from));
}


void TodoUpdate::MergeFrom(const TodoUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:todo.TodoUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  todos_.MergeFrom(from.todos_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TodoUpdate::CopyFrom(const TodoUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:todo.TodoUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TodoUpdate::IsInitialized() const {
  return true;
}

void TodoUpdate::InternalSwap(TodoUpdate* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  todos_.InternalSwap(&other->todos_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TodoUpdate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto_getter, &descriptor_table_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto_once,
      file_level_metadata_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto[1]);
}

// ===================================================================

class UpdateResult::_Internal {
 public:
};

UpdateResult::UpdateResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:todo.UpdateResult)
}
UpdateResult::UpdateResult(const UpdateResult& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:todo.UpdateResult)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateResult::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata UpdateResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto_getter, &descriptor_table_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto_once,
      file_level_metadata_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto[2]);
}

// ===================================================================

class TodoQuery::_Internal {
 public:
};

TodoQuery::TodoQuery(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:todo.TodoQuery)
}
TodoQuery::TodoQuery(const TodoQuery& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:todo.TodoQuery)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TodoQuery::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TodoQuery::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata TodoQuery::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto_getter, &descriptor_table_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto_once,
      file_level_metadata_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto[3]);
}

// ===================================================================

class QueryResult::_Internal {
 public:
};

QueryResult::QueryResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  todos_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:todo.QueryResult)
}
QueryResult::QueryResult(const QueryResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      todos_(from.todos_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:todo.QueryResult)
}

inline void QueryResult::SharedCtor() {
}

QueryResult::~QueryResult() {
  // @@protoc_insertion_point(destructor:todo.QueryResult)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void QueryResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void QueryResult::Clear() {
// @@protoc_insertion_point(message_clear_start:todo.QueryResult)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  todos_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryResult::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .todo.Todo todos = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_todos(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* QueryResult::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:todo.QueryResult)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .todo.Todo todos = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_todos_size()); i < n; i++) {
    const auto& repfield = this->_internal_todos(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:todo.QueryResult)
  return target;
}

size_t QueryResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:todo.QueryResult)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .todo.Todo todos = 1;
  total_size += 1UL * this->_internal_todos_size();
  for (const auto& msg : this->todos_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    QueryResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryResult::GetClassData() const { return &_class_data_; }

void QueryResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<QueryResult *>(to)->MergeFrom(
      static_cast<const QueryResult &>(from));
}


void QueryResult::MergeFrom(const QueryResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:todo.QueryResult)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  todos_.MergeFrom(from.todos_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryResult::CopyFrom(const QueryResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:todo.QueryResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryResult::IsInitialized() const {
  return true;
}

void QueryResult::InternalSwap(QueryResult* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  todos_.InternalSwap(&other->todos_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto_getter, &descriptor_table_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto_once,
      file_level_metadata_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto[4]);
}

// ===================================================================

class TodoAdd::_Internal {
 public:
};

TodoAdd::TodoAdd(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  todos_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:todo.TodoAdd)
}
TodoAdd::TodoAdd(const TodoAdd& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      todos_(from.todos_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:todo.TodoAdd)
}

inline void TodoAdd::SharedCtor() {
}

TodoAdd::~TodoAdd() {
  // @@protoc_insertion_point(destructor:todo.TodoAdd)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TodoAdd::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TodoAdd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TodoAdd::Clear() {
// @@protoc_insertion_point(message_clear_start:todo.TodoAdd)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  todos_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TodoAdd::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .todo.Todo todos = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_todos(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TodoAdd::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:todo.TodoAdd)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .todo.Todo todos = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_todos_size()); i < n; i++) {
    const auto& repfield = this->_internal_todos(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:todo.TodoAdd)
  return target;
}

size_t TodoAdd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:todo.TodoAdd)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .todo.Todo todos = 1;
  total_size += 1UL * this->_internal_todos_size();
  for (const auto& msg : this->todos_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TodoAdd::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TodoAdd::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TodoAdd::GetClassData() const { return &_class_data_; }

void TodoAdd::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TodoAdd *>(to)->MergeFrom(
      static_cast<const TodoAdd &>(from));
}


void TodoAdd::MergeFrom(const TodoAdd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:todo.TodoAdd)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  todos_.MergeFrom(from.todos_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TodoAdd::CopyFrom(const TodoAdd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:todo.TodoAdd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TodoAdd::IsInitialized() const {
  return true;
}

void TodoAdd::InternalSwap(TodoAdd* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  todos_.InternalSwap(&other->todos_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TodoAdd::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto_getter, &descriptor_table_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto_once,
      file_level_metadata_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto[5]);
}

// ===================================================================

class AddResult::_Internal {
 public:
};

AddResult::AddResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:todo.AddResult)
}
AddResult::AddResult(const AddResult& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:todo.AddResult)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddResult::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata AddResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto_getter, &descriptor_table_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto_once,
      file_level_metadata_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto[6]);
}

// ===================================================================

class DeleteQuery::_Internal {
 public:
};

DeleteQuery::DeleteQuery(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  ids_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:todo.DeleteQuery)
}
DeleteQuery::DeleteQuery(const DeleteQuery& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      ids_(from.ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:todo.DeleteQuery)
}

inline void DeleteQuery::SharedCtor() {
}

DeleteQuery::~DeleteQuery() {
  // @@protoc_insertion_point(destructor:todo.DeleteQuery)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteQuery::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DeleteQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:todo.DeleteQuery)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteQuery::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_ids();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "todo.DeleteQuery.ids"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteQuery::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:todo.DeleteQuery)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string ids = 1;
  for (int i = 0, n = this->_internal_ids_size(); i < n; i++) {
    const auto& s = this->_internal_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "todo.DeleteQuery.ids");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:todo.DeleteQuery)
  return target;
}

size_t DeleteQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:todo.DeleteQuery)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string ids = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(ids_.size());
  for (int i = 0, n = ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      ids_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteQuery::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteQuery::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteQuery::GetClassData() const { return &_class_data_; }

void DeleteQuery::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteQuery *>(to)->MergeFrom(
      static_cast<const DeleteQuery &>(from));
}


void DeleteQuery::MergeFrom(const DeleteQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:todo.DeleteQuery)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  ids_.MergeFrom(from.ids_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteQuery::CopyFrom(const DeleteQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:todo.DeleteQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteQuery::IsInitialized() const {
  return true;
}

void DeleteQuery::InternalSwap(DeleteQuery* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ids_.InternalSwap(&other->ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteQuery::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto_getter, &descriptor_table_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto_once,
      file_level_metadata_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto[7]);
}

// ===================================================================

class DeleteResult::_Internal {
 public:
};

DeleteResult::DeleteResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:todo.DeleteResult)
}
DeleteResult::DeleteResult(const DeleteResult& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:todo.DeleteResult)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteResult::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeleteResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto_getter, &descriptor_table_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto_once,
      file_level_metadata_apps_2fapps_2dservice_2ftodo_2ftodo_2eproto[8]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace todo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::todo::Todo*
Arena::CreateMaybeMessage< ::todo::Todo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::todo::Todo >(arena);
}
template<> PROTOBUF_NOINLINE ::todo::TodoUpdate*
Arena::CreateMaybeMessage< ::todo::TodoUpdate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::todo::TodoUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::todo::UpdateResult*
Arena::CreateMaybeMessage< ::todo::UpdateResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::todo::UpdateResult >(arena);
}
template<> PROTOBUF_NOINLINE ::todo::TodoQuery*
Arena::CreateMaybeMessage< ::todo::TodoQuery >(Arena* arena) {
  return Arena::CreateMessageInternal< ::todo::TodoQuery >(arena);
}
template<> PROTOBUF_NOINLINE ::todo::QueryResult*
Arena::CreateMaybeMessage< ::todo::QueryResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::todo::QueryResult >(arena);
}
template<> PROTOBUF_NOINLINE ::todo::TodoAdd*
Arena::CreateMaybeMessage< ::todo::TodoAdd >(Arena* arena) {
  return Arena::CreateMessageInternal< ::todo::TodoAdd >(arena);
}
template<> PROTOBUF_NOINLINE ::todo::AddResult*
Arena::CreateMaybeMessage< ::todo::AddResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::todo::AddResult >(arena);
}
template<> PROTOBUF_NOINLINE ::todo::DeleteQuery*
Arena::CreateMaybeMessage< ::todo::DeleteQuery >(Arena* arena) {
  return Arena::CreateMessageInternal< ::todo::DeleteQuery >(arena);
}
template<> PROTOBUF_NOINLINE ::todo::DeleteResult*
Arena::CreateMaybeMessage< ::todo::DeleteResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::todo::DeleteResult >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
